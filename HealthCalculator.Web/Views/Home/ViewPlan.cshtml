
@{
    ViewBag.Title = "Plan";
}
<div class="container-fluid bg-sky">
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12 text-center pt-3 pb-2">
            <h2 class="semi text-white text-shadow">
                <span id="HeaderValue"></span>
                <img src="@CommonMethods.ServerPath/img/thumbs.png" style="width: 40px; vertical-align: middle; margin-top: -15px;" />
                <img src="@CommonMethods.ServerPath/img/smiley.png" class="smiley" style="width: 40px;" />
            </h2>
        </div>
    </div>
</div>

<div class="bg-yellow">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col">
                <ul class="list-inline menu-sec">

                    <li class="list-inline-item"><a href="~/Home/assessment?userId=">My Assessment Tool</a></li>

                    <li class="list-inline-item"> <a href="#" onclick="TrackersHelp(this)">My Trackers<span class="float-right d-none d-md-block font" style="color: red;" id="spTrackers"></span></a></li>

                    <li class="list-inline-item"><a href="~/Home/MyEatingSmartTools?userId=">My Eating Smart Tool</a></li>


                    <li class="list-inline-item"> <a href="#" onclick="PatternHelp(this)">My Eating Pattern<span class="float-right d-none d-md-block" style="color: red;" id="spPattern"></span></a></li>

                    <li class="list-inline-item"> <a href="#" onclick="MessageHelp(this)">Admin Messages<span class="float-right d-none d-md-block" style="color: red;" id="spMessage"></span></a></li>

                    <li class="list-inline-item"><a href="~/Home/ViewPlan?userId=">View Plans</a></li>
                    <li class="list-inline-item active"><a onclick="Logout(this)">Logout</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid flowerBg">
    <div class="row justify-content-center">
        <div class="col-12 col-md-12 col-lg-11">
            <div class="middleContent bg-gray shadow" style="overflow-x: scroll;">
                <div class="row">
                    <div class="demo-container">
                        <div id="gridContainer"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function MessageHelp(ctrl) {
        var selectedUserId ="@Request.QueryString["userId"].ToString()";
        if (selectedUserId != "") {
            sessionStorage.setItem('userId', selectedUserId);
        }
        ctrl.href = '@Url.Content("~/Home/helpDesk?userId=")' + selectedUserId;
        ctrl.click();
    }
    function TrackersHelp(ctrl)
    {
        var selectedUserId = "@Request.QueryString["userId"].ToString()";
        if (selectedUserId != "") {
            sessionStorage.setItem('userId', selectedUserId);
        }
        ctrl.href = '@Url.Content("~/Home/tracker?userId=")' + selectedUserId;
        ctrl.click();
    }
    function PatternHelp(ctrl)
    {
        var selectedUserId ="@Request.QueryString["userId"].ToString()";
        if (selectedUserId != "") {
            sessionStorage.setItem('userId', selectedUserId);
        }
        ctrl.href = '@Url.Content("~/Home/MyEatingPattern?userId=")' + selectedUserId;
        ctrl.click();
    }

    function Logout(ctrl) {
        sessionStorage.clear();
        ctrl.href = '@Url.Content("~/Home/Logout")';
        ctrl.click();
    }
    function getdate(strdate) {
        var strRetrunDate;
        if (strdate != null) {
            var dateData = new Date(parseInt(strdate.replace("/Date(", "").replace(")/")));
            var dd = dateData.getDate();
            var mm = dateData.getMonth() + 1; //January is 0!
            var yyyy = dateData.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }
            strRetrunDate = yyyy + '-' + mm + '-' + dd;
        }
        return strRetrunDate;
    }

    window.onload = function ()
    {
        var qData = "@Request.QueryString["userId"].ToString()";
        if (qData != "")
        {
            qData = "@Request.QueryString["userId"].ToString()";
            sessionStorage.setItem('userId', qData);

        }
        var UserNotification =
          {
              TableType: "GetRecord",
              UserId: sessionStorage.getItem('userId')
          }
        CommonAjaxMethod('Program/GetUserNotification', UserNotification, false, 'POST', function (response) {

            if (response.data.Data.length > 0) {
                $("#spMessage").text(" (" + response.data.Data[0].MessageCount + ")");
                if (response.data.Data[0].Trackerfalldays != "0") {
                    $("#spTrackers").text(" (" + response.data.Data[0].Trackerfalldays + ")");
                }
                else {
                    $("#spTrackers").text(" (" + response.data.Data[0].Trackerfilled + ")");
                }
                $("#spPattern").text(" (" + response.data.Data[0].PatternCount + ")");
            }

        });

        if (sessionStorage.getItem('RoleID') == "3") {

            var obj1 = {

                Type: "4",
                OperationType: "UPDATE",
                UserId: qData
            }
            CommonAjaxMethod('Home/AdminNotificationEnquiryMessage', obj1, false, 'POST', function (response) {

            });
        }

        CommonAjaxMethod('Home/GetUserPlanDetails', { userId: sessionStorage.getItem('userId') }, false, 'GET', function (response) {
            Load(response.dataCollection);
            //$("#gridContainer").dxDataGrid(
            //    {
            //        dataSource: response.dataCollection,
            //        columns: ["FirstName", "LastName", "Email", "UserName", "MobileNo"],
            //    showBorders: true
            //});
        });
        CommonAjaxMethod('Home/GetUserDetailsById', { userId: sessionStorage.getItem('userId') }, false, 'GET', function (response) {
            $("#HeaderValue").text("ACCOUNT SETTINGS | " + response.dataCollection[0].FirstName + ",  believe in yourself. You can do it!");

        });
    }

    function Load(ctr)
    {

             $("#gridContainer").dxDataGrid({
                 dataSource: ctr,
                allowColumnReordering: true,
                showBorders: true,
                columnMinWidth: 180,
                searchPanel: {
                    visible: true
                },
                paging: {
                    pageSize: 10
                },
                groupPanel: {
                    visible: true
                },
                editing: {
                    mode: "form",
                    allowUpdating: false
                },
               
                columns: [
                   
                     {
                         dataField: "Program",
                         width: 300
                     },

                    "ProductName",
                    {
                        caption: "Start Active Date",

                        allowEditing: false,
                        calculateCellValue: function(data) {
                            return getdate(data.StartActiveDate);
                        }
                    },
                     {
                         caption: "End Active Date",

                         allowEditing: false,
                         calculateCellValue: function(data) {
                             return getdate(data.EndActiveDate);
                         }
                     },
                 ,
                   {
                       caption: "Total days",
                       dataField: "Totaldays",
                      
                   },
                    {
                        caption: "INR Rate",
                        dataField: "INRRate",

                    },
                   
                     {
                         caption: "Doller Rate",
                         dataField: "DollerRate",

                     },

                     {
                         caption: "Is Active",
                         dataField: "ActivePlan",

                     },
                   {
                       caption: "Is Payment Done",
                       dataField: "IsPaymentDone",

                   },
               {
                   caption: "Payment Type",
                   dataField: "PaymentType",

               },
              

                    {
                        caption: "Edit",
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            $('<a />').addClass('dx-link')
                                .text('Edit Plan')
                                .on('dxclick', function ()
                                {

                                   var roleId= sessionStorage.getItem('RoleID');
                                   sessionStorage.setItem('SelectedUserId', options.data.UserId);
                                    if (roleId == "3" || roleId == "2")
                                    {
                                        window.location.href = "EditPlan?orderId=" + options.data.OrderDetail_Id;
                                    }
                                    else
                                    {
                                       alert("You dont have sufficient perpmission on it.")
                                    }


                                }).appendTo(container);
                        }
                    }

                ]
             });
    }
</script>

